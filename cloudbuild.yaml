steps:
  # Step 1: Compile and package with Java 21 + Maven 3.9.9
  - id: "Build with Maven"
    name: 'maven:3.9.9-eclipse-temurin-21'
    entrypoint: mvn
    args: ['clean', 'package']

  # Step 1.5: List workspace + target directory to verify JAR
  - id: "List Workspace"
    name: 'bash'
    args:
      - '-c'
      - |
        echo "Listing workspace root:"
        ls -l
        echo "--------------------------"
        echo "Listing target directory:"
        ls -l target || echo "No target directory found!"

  # Step 2: Run tests
  - id: "Run Tests"
    name: 'maven:3.9.9-eclipse-temurin-21'
    entrypoint: mvn
    args: ['test']

  # Step 3: Build Docker Image
  - id: "Build Docker Image"
    name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'anujnamdev/my-java-app:latest',
        '.'
      ]

  # Step 4: Verify Docker Image
  - id: "Verify Docker Image"
    name: 'gcr.io/cloud-builders/docker'
    args: ['images', 'anujnamdev/my-java-app:latest']

  # Step 5: Docker Hub Login
  - id: "Docker Hub Login"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - "echo 'Logging in to Docker Hub' && echo 'Anuj@@271' | docker login -u 'anujnamdev' --password-stdin"

  # Step 6: Push Docker image
  - id: "Push Docker Image"
    name: "gcr.io/cloud-builders/docker"
    args:
      - push
      - docker.io/anujnamdev/my-java-app:latest

  # Step 7: Deploy to VM
  - id: "Deploy to VM"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - -c
      - |
        gcloud compute ssh anujnamdev271_gmail_com@my-docker-vm --zone=us-central1-a --command "
          echo '>>> Cleaning old containers & images...'
          sudo docker rm -f \$(sudo docker ps -aq) || true
          sudo docker rmi -f anujnamdev/my-java-app:latest || true
          echo '>>> Pulling latest image...'
          sudo docker pull anujnamdev/my-java-app:latest
          echo '>>> Running container...'
          sudo docker run -d -p 8080:8080 --name my-java-app anujnamdev/my-java-app:latest
        "

options:
  logging: CLOUD_LOGGING_ONLY

